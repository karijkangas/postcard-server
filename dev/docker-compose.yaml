version: '3.4'
services:
  api:
    image: ${REGISTRY}/postcard-api-dev:${RELEASE}
    networks:
      - net
    volumes:
      - ${POSTCARD_ROOT}/:/home/node/app/
    env_file: environment.env
    ports:
      - '4200:9229'
    command: npm run api-dev
    secrets:
      - POSTCARD_POSTGRES_PASSWORD
      - POSTCARD_S3_ACCESS_KEY
      - POSTCARD_S3_SECRET_ACCESS_KEY
      - POSTCARD_SES_ACCESS_KEY
      - POSTCARD_SES_SECRET_ACCESS_KEY

  wss:
    image: ${REGISTRY}/postcard-wss-dev:${RELEASE}
    networks:
      - net
    volumes:
      - ${POSTCARD_ROOT}/:/home/node/app/
    env_file: environment.env
    ports:
      - '4201:9229'
    command: npm run wss-dev

  nginx:
    image: nginx:1-alpine
    networks:
      - net
    volumes:
      - ${POSTCARD_ROOT}/dev/nginx.conf:/etc/nginx/nginx.conf
    environment:
      ENV: development
    ports:
      - '4000:4000'

  redis:
    image: redis:5-alpine
    networks:
      - net
    volumes:
      - redis:/data
    command: redis-server

  postgres:
    image: postgres:11-alpine
    networks:
      - net
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTCARD_POSTGRES_PASSWORD
    secrets:
      - POSTCARD_POSTGRES_PASSWORD

  minio:
    image: minio/minio
    command: ['minio', 'server', '/data']
    networks:
      - net
    ports:
      - '9000:9000'
      - '4102:9000'
    volumes:
      - minio:/data
    environment:
      MINIO_ACCESS_KEY_FILE: POSTCARD_S3_ACCESS_KEY
      MINIO_SECRET_KEY_FILE: POSTCARD_S3_SECRET_ACCESS_KEY
      MINIO_HTTP_TRACE: /dev/stdout
    secrets:
      - POSTCARD_S3_ACCESS_KEY
      - POSTCARD_S3_SECRET_ACCESS_KEY

  create-buckets:
    image: minio/mc
    depends_on:
      - minio
    networks:
      - net
    entrypoint: >
      /bin/sh -c '
      /usr/bin/mc config host add minio http://minio:9000 $$(cat /run/secrets/POSTCARD_S3_ACCESS_KEY) $$(cat /run/secrets/POSTCARD_S3_SECRET_ACCESS_KEY) || exit 1;
      /usr/bin/mc mb -p minio/uploads minio/images;
      exit 0;'
    deploy:
      restart_policy:
        condition: on-failure
    secrets:
      - POSTCARD_S3_ACCESS_KEY
      - POSTCARD_S3_SECRET_ACCESS_KEY

  create-schema:
    image: postgres:11-alpine
    networks:
      - net
    volumes:
      - ${POSTCARD_ROOT}/design/database-schema.sql:/database-schema.sql
    env_file: environment.env
    entrypoint: >
      /bin/sh -c 'PGPASSWORD=$$(cat /run/secrets/POSTCARD_POSTGRES_PASSWORD) psql --no-password --host=$$POSTCARD_POSTGRES_HOST --port=$$POSTCARD_POSTGRES_PORT --username=$$POSTCARD_POSTGRES_USER --dbname=$$POSTCARD_POSTGRES_DB -f /database-schema.sql;'
    deploy:
      restart_policy:
        condition: on-failure
    secrets:
      - POSTCARD_POSTGRES_PASSWORD

  mc:
    image: minio/mc
    entrypoint: >
      /bin/sh -c '
      /usr/bin/mc config host add minio http://minio:9000 $$(cat /run/secrets/POSTCARD_S3_ACCESS_KEY) $$(cat /run/secrets/POSTCARD_S3_SECRET_ACCESS_KEY);
      tail -f /dev/null;'
    networks:
      - net
    volumes:
      - mc:/root/.mc
    secrets:
      - POSTCARD_S3_ACCESS_KEY
      - POSTCARD_S3_SECRET_ACCESS_KEY

  swagger-editor:
    image: swaggerapi/swagger-editor
    ports:
      - '4100:8080'

  pgadmin:
    image: dpage/pgadmin4
    networks:
      - net
    ports:
      - '4101:80'
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres
      PGADMIN_DEFAULT_PASSWORD: postgres

secrets:
  POSTCARD_POSTGRES_PASSWORD:
    external: true
  POSTCARD_S3_ACCESS_KEY:
    external: true
  POSTCARD_S3_SECRET_ACCESS_KEY:
    external: true
  POSTCARD_SES_ACCESS_KEY:
    external: true
  POSTCARD_SES_SECRET_ACCESS_KEY:
    external: true

volumes:
  redis:
  postgres:
  minio:
  pgadmin:
  mc:

networks:
  net:
